(function (e, t) {
    function n(t) {
        return e.less[t.split('/')[1]];
    }
    function f() {
        r.env === 'development' ? (r.optimization = 0, r.watchTimer = setInterval(function () {
            r.watchMode && g(function (e, t, n, i, s) {
                e ? k(e, i.href) : t && S(t.toCSS(r), i, s.lastModified);
            });
        }, r.poll)) : r.optimization = 3;
    }
    function m() {
        var e = document.getElementsByTagName('style');
        for (var t = 0; t < e.length; t++)
            if (e[t].type.match(p)) {
                var n = new r.tree.parseEnv(r);
                n.filename = document.location.href.replace(/#.*$/, ''), new r.Parser(n).parse(e[t].innerHTML || '', function (n, i) {
                    if (n)
                        return k(n, 'inline');
                    var s = i.toCSS(r), o = e[t];
                    o.type = 'text/css', o.styleSheet ? o.styleSheet.cssText = s : o.innerHTML = s;
                });
            }
    }
    function g(e, t) {
        for (var n = 0; n < r.sheets.length; n++)
            w(r.sheets[n], e, t, r.sheets.length - (n + 1));
    }
    function y(e, t) {
        var n = b(e), r = b(t), i, s, o, u, a = '';
        if (n.hostPart !== r.hostPart)
            return '';
        s = Math.max(r.directories.length, n.directories.length);
        for (i = 0; i < s; i++)
            if (r.directories[i] !== n.directories[i])
                break;
        u = r.directories.slice(i), o = n.directories.slice(i);
        for (i = 0; i < u.length - 1; i++)
            a += '../';
        for (i = 0; i < o.length - 1; i++)
            a += o[i] + '/';
        return a;
    }
    function b(e, t) {
        var n = /^((?:[a-z-]+:)?\/+?(?:[^\/\?#]*\/)|([\/\\]))?((?:[^\/\\\?#]*[\/\\])*)([^\/\\\?#]*)([#\?].*)?$/, r = e.match(n), i = {}, s = [], o, u;
        if (!r)
            throw new Error('Could not parse sheet href - \'' + e + '\'');
        if (!r[1] || r[2]) {
            u = t.match(n);
            if (!u)
                throw new Error('Could not parse page url - \'' + t + '\'');
            r[1] = r[1] || u[1] || '', r[2] || (r[3] = u[3] + r[3]);
        }
        if (r[3]) {
            s = r[3].replace('\\', '/').split('/');
            for (o = 0; o < s.length; o++)
                s[o] === '.' && (s.splice(o, 1), o -= 1);
            for (o = 0; o < s.length; o++)
                s[o] === '..' && o > 0 && (s.splice(o - 1, 2), o -= 2);
        }
        return i.hostPart = r[1], i.directories = s, i.path = r[1] + s.join('/'), i.fileUrl = i.path + (r[4] || ''), i.url = i.fileUrl + (r[5] || ''), i;
    }
    function w(t, n, i, s) {
        var o = b(t.href, e.location.href), u = o.url, a = l && l.getItem(u), f = l && l.getItem(u + ':timestamp'), c = {
                css: a,
                timestamp: f
            }, h, p = {
                relativeUrls: r.relativeUrls,
                currentDirectory: o.path,
                filename: u
            };
        t instanceof r.tree.parseEnv ? (h = new r.tree.parseEnv(t), p.entryPath = h.currentFileInfo.entryPath, p.rootpath = h.currentFileInfo.rootpath, p.rootFilename = h.currentFileInfo.rootFilename) : (h = new r.tree.parseEnv(r), h.mime = t.type, p.entryPath = o.path, p.rootpath = r.rootpath || o.path, p.rootFilename = u), h.relativeUrls && (r.rootpath ? p.rootpath = b(r.rootpath + y(o.path, p.entryPath)).path : p.rootpath = o.path), x(u, t.type, function (e, a) {
            v += e.replace(/@import .+?;/gi, '');
            if (!i && c && a && new Date(a).valueOf() === new Date(c.timestamp).valueOf())
                S(c.css, t), n(null, null, e, t, {
                    local: !0,
                    remaining: s
                }, u);
            else
                try {
                    h.contents[u] = e, h.paths = [o.path], h.currentFileInfo = p, new r.Parser(h).parse(e, function (r, i) {
                        if (r)
                            return n(r, null, null, t);
                        try {
                            n(r, i, e, t, {
                                local: !1,
                                lastModified: a,
                                remaining: s
                            }, u), h.currentFileInfo.rootFilename === u && N(document.getElementById('less-error-message:' + E(u)));
                        } catch (r) {
                            n(r, null, null, t);
                        }
                    });
                } catch (f) {
                    n(f, null, null, t);
                }
        }, function (e, r) {
            n({
                type: 'File',
                message: '\'' + r + '\' wasn\'t found (' + e + ')'
            }, null, null, t);
        });
    }
    function E(e) {
        return e.replace(/^[a-z-]+:\/+?[^\/]+/, '').replace(/^\//, '').replace(/\.[a-zA-Z]+$/, '').replace(/[^\.\w-]+/g, '-').replace(/\./g, ':');
    }
    function S(e, t, n) {
        var r = t.href || '', i = 'less:' + (t.title || E(r)), s = document.getElementById(i), o = !1, u = document.createElement('style');
        u.setAttribute('type', 'text/css'), t.media && u.setAttribute('media', t.media), u.id = i;
        if (u.styleSheet)
            try {
                u.styleSheet.cssText = e;
            } catch (a) {
                throw new Error('Couldn\'t reassign styleSheet.cssText.');
            }
        else
            u.appendChild(document.createTextNode(e)), o = s !== null && s.childNodes.length > 0 && u.childNodes.length > 0 && s.firstChild.nodeValue === u.firstChild.nodeValue;
        var f = document.getElementsByTagName('head')[0];
        if (s == null || o === !1) {
            var c = t && t.nextSibling || null;
            (c || document.getElementsByTagName('head')[0]).parentNode.insertBefore(u, c);
        }
        s && o === !1 && f.removeChild(s);
        if (n && l) {
            C('saving ' + r + ' to cache.');
            try {
                l.setItem(r, e), l.setItem(r + ':timestamp', n);
            } catch (a) {
                C('failed to save');
            }
        }
    }
    function x(e, t, n, i) {
        function a(t, n, r) {
            t.status >= 200 && t.status < 300 ? n(t.responseText, t.getResponseHeader('Last-Modified')) : typeof r == 'function' && r(t.status, e);
        }
        var s = T(), u = o ? r.fileAsync : r.async;
        typeof s.overrideMimeType == 'function' && s.overrideMimeType('text/css'), s.open('GET', e, u), s.setRequestHeader('Accept', t || 'text/x-less, text/css; q=0.9, */*; q=0.5'), s.send(null), o && !r.fileAsync ? s.status === 0 || s.status >= 200 && s.status < 300 ? n(s.responseText) : i(s.status, e) : u ? s.onreadystatechange = function () {
            s.readyState == 4 && a(s, n, i);
        } : a(s, n, i);
    }
    function T() {
        if (e.XMLHttpRequest)
            return new XMLHttpRequest();
        try {
            return new ActiveXObject('MSXML2.XMLHTTP.3.0');
        } catch (t) {
            return C('browser doesn\'t support AJAX.'), null;
        }
    }
    function N(e) {
        return e && e.parentNode.removeChild(e);
    }
    function C(e) {
        r.env == 'development' && typeof console != 'undefined' && console.log('less: ' + e);
    }
    function k(e, n) {
        var i = 'less-error-message:' + E(n || ''), s = '<li><label>{line}</label><pre class="{class}">{content}</pre></li>', o = document.createElement('div'), u, a, f = [], l = e.filename || n, c = l.match(/([^\/]+(\?.*)?)$/)[1];
        o.id = i, o.className = 'less-error-message', a = '<h3>' + (e.type || 'Syntax') + 'Error: ' + (e.message || 'There is an error in your .less file') + '</h3>' + '<p>in <a href="' + l + '">' + c + '</a> ';
        var h = function (e, n, r) {
            e.extract[n] != t && f.push(s.replace(/\{line\}/, (parseInt(e.line) || 0) + (n - 1)).replace(/\{class\}/, r).replace(/\{content\}/, e.extract[n]));
        };
        e.extract ? (h(e, 0, ''), h(e, 1, 'line'), h(e, 2, ''), a += 'on line ' + e.line + ', column ' + (e.column + 1) + ':</p>' + '<ul>' + f.join('') + '</ul>') : e.stack && (a += '<br/>' + e.stack.split('\n').slice(1).join('<br/>')), o.innerHTML = a, S([
            '.less-error-message ul, .less-error-message li {',
            'list-style-type: none;',
            'margin-right: 15px;',
            'padding: 4px 0;',
            'margin: 0;',
            '}',
            '.less-error-message label {',
            'font-size: 12px;',
            'margin-right: 15px;',
            'padding: 4px 0;',
            'color: #cc7777;',
            '}',
            '.less-error-message pre {',
            'color: #dd6666;',
            'padding: 4px 0;',
            'margin: 0;',
            'display: inline-block;',
            '}',
            '.less-error-message pre.line {',
            'color: #ff0000;',
            '}',
            '.less-error-message h3 {',
            'font-size: 20px;',
            'font-weight: bold;',
            'padding: 15px 0 5px 0;',
            'margin: 0;',
            '}',
            '.less-error-message a {',
            'color: #10a',
            '}',
            '.less-error-message .error {',
            'color: red;',
            'font-weight: bold;',
            'padding-bottom: 2px;',
            'border-bottom: 1px dashed red;',
            '}'
        ].join('\n'), { title: 'error-message' }), o.style.cssText = [
            'font-family: Arial, sans-serif',
            'border: 1px solid #e00',
            'background-color: #eee',
            'border-radius: 5px',
            '-webkit-border-radius: 5px',
            '-moz-border-radius: 5px',
            'color: #e00',
            'padding: 15px',
            'margin-bottom: 15px'
        ].join(';'), r.env == 'development' && (u = setInterval(function () {
            document.body && (document.getElementById(i) ? document.body.replaceChild(o, document.getElementById(i)) : document.body.insertBefore(o, document.body.firstChild), clearInterval(u));
        }, 10));
    }
    var r, i, s;
    typeof environment == 'object' && {}.toString.call(environment) === '[object Environment]' ? (typeof e == 'undefined' ? r = {} : r = e.less = {}, i = r.tree = {}, r.mode = 'rhino') : typeof e == 'undefined' ? (r = exports, i = n('./tree'), r.mode = 'node') : (typeof e.less == 'undefined' && (e.less = {}), r = e.less, i = e.less.tree = {}, r.mode = 'browser'), r.Parser = function (t) {
        function m() {
            a = c[u], f = o, h = o;
        }
        function g() {
            c[u] = a, o = f, h = o;
        }
        function y() {
            o > h && (c[u] = c[u].slice(o - h), h = o);
        }
        function b(e) {
            var t = e.charCodeAt(0);
            return t === 32 || t === 10 || t === 9;
        }
        function w(e) {
            var t, n, r, i, a;
            if (e instanceof Function)
                return e.call(p.parsers);
            if (typeof e == 'string')
                t = s.charAt(o) === e ? e : null, r = 1, y();
            else {
                y();
                if (!(t = e.exec(c[u])))
                    return null;
                r = t[0].length;
            }
            if (t)
                return E(r), typeof t == 'string' ? t : t.length === 1 ? t[0] : t;
        }
        function E(e) {
            var t = o, n = u, r = o + c[u].length, i = o += e;
            while (o < r) {
                if (!b(s.charAt(o)))
                    break;
                o++;
            }
            return c[u] = c[u].slice(e + (o - i)), h = o, c[u].length === 0 && u < c.length - 1 && u++, t !== o || n !== u;
        }
        function S(e, t) {
            var n = w(e);
            if (!!n)
                return n;
            x(t || (typeof e == 'string' ? 'expected \'' + e + '\' got \'' + s.charAt(o) + '\'' : 'unexpected token'));
        }
        function x(e, t) {
            var n = new Error(e);
            throw n.index = o, n.type = t || 'Syntax', n;
        }
        function T(e) {
            return typeof e == 'string' ? s.charAt(o) === e : e.test(c[u]) ? !0 : !1;
        }
        function N(e, t) {
            return e.filename && t.currentFileInfo.filename && e.filename !== t.currentFileInfo.filename ? p.imports.contents[e.filename] : s;
        }
        function C(e, t) {
            for (var n = e, r = -1; n >= 0 && t.charAt(n) !== '\n'; n--)
                r++;
            return {
                line: typeof e == 'number' ? (t.slice(0, e).match(/\n/g) || '').length : null,
                column: r
            };
        }
        function k(e, t, i) {
            var s = i.currentFileInfo.filename;
            return r.mode !== 'browser' && r.mode !== 'rhino' && (s = n('path').resolve(s)), {
                lineNumber: C(e, t).line + 1,
                fileName: s
            };
        }
        function L(e, t) {
            var n = N(e, t), r = C(e.index, n), i = r.line, s = r.column, o = n.split('\n');
            this.type = e.type || 'Syntax', this.message = e.message, this.filename = e.filename || t.currentFileInfo.filename, this.index = e.index, this.line = typeof i == 'number' ? i + 1 : null, this.callLine = e.call && C(e.call, n).line + 1, this.callExtract = o[C(e.call, n).line], this.stack = e.stack, this.column = s, this.extract = [
                o[i - 1],
                o[i],
                o[i + 1]
            ];
        }
        var s, o, u, a, f, l, c, h, p, d = this;
        t instanceof i.parseEnv || (t = new i.parseEnv(t));
        var v = this.imports = {
                paths: t.paths || [],
                queue: [],
                files: t.files,
                contents: t.contents,
                mime: t.mime,
                error: null,
                push: function (e, n, i) {
                    var s = this;
                    this.queue.push(e), r.Parser.importer(e, n, function (t, n, r) {
                        s.queue.splice(s.queue.indexOf(e), 1);
                        var o = r in s.files;
                        s.files[r] = n, t && !s.error && (s.error = t), i(t, n, o);
                    }, t);
                }
            };
        return L.prototype = new Error(), L.prototype.constructor = L, this.env = t = t || {}, this.optimization = 'optimization' in this.env ? this.env.optimization : 1, p = {
            imports: v,
            parse: function (e, a) {
                var f, d, v, m, g, y, b = [], E, S = null;
                o = u = h = l = 0, s = e.replace(/\r\n/g, '\n'), s = s.replace(/^\uFEFF/, ''), c = function (e) {
                    var n = 0, r = /(?:@\{[\w-]+\}|[^"'`\{\}\/\(\)\\])+/g, i = /\/\*(?:[^*]|\*+[^\/*])*\*+\/|\/\/.*/g, o = /"((?:[^"\\\r\n]|\\.)*)"|'((?:[^'\\\r\n]|\\.)*)'|`((?:[^`]|\\.)*)`/g, u = 0, a, f = e[0], l;
                    for (var c = 0, h, p; c < s.length;) {
                        r.lastIndex = c, (a = r.exec(s)) && a.index === c && (c += a[0].length, f.push(a[0])), h = s.charAt(c), i.lastIndex = o.lastIndex = c;
                        if (a = o.exec(s))
                            if (a.index === c) {
                                c += a[0].length, f.push(a[0]);
                                continue;
                            }
                        if (!l && h === '/') {
                            p = s.charAt(c + 1);
                            if (p === '/' || p === '*')
                                if (a = i.exec(s))
                                    if (a.index === c) {
                                        c += a[0].length, f.push(a[0]);
                                        continue;
                                    }
                        }
                        switch (h) {
                        case '{':
                            if (!l) {
                                u++, f.push(h);
                                break;
                            }
                            ;
                        case '}':
                            if (!l) {
                                u--, f.push(h), e[++n] = f = [];
                                break;
                            }
                            ;
                        case '(':
                            if (!l) {
                                l = !0, f.push(h);
                                break;
                            }
                            ;
                        case ')':
                            if (l) {
                                l = !1, f.push(h);
                                break;
                            }
                            ;
                        default:
                            f.push(h);
                        }
                        c++;
                    }
                    return u != 0 && (S = new L({
                        index: c - 1,
                        type: 'Parse',
                        message: u > 0 ? 'missing closing `}`' : 'missing opening `{`',
                        filename: t.currentFileInfo.filename
                    }, t)), e.map(function (e) {
                        return e.join('');
                    });
                }([[]]);
                if (S)
                    return a(new L(S, t));
                try {
                    f = new i.Ruleset([], w(this.parsers.primary)), f.root = !0, f.firstRoot = !0;
                } catch (x) {
                    return a(new L(x, t));
                }
                f.toCSS = function (e) {
                    var s, o, u;
                    return function (s, o) {
                        s = s || {};
                        var u, a = new i.evalEnv(s);
                        typeof o == 'object' && !Array.isArray(o) && (o = Object.keys(o).map(function (e) {
                            var t = o[e];
                            return t instanceof i.Value || (t instanceof i.Expression || (t = new i.Expression([t])), t = new i.Value([t])), new i.Rule('@' + e, t, !1, 0);
                        }), a.frames = [new i.Ruleset(null, o)]);
                        try {
                            var f = e.call(this, a);
                            new i.joinSelectorVisitor().run(f), new i.processExtendsVisitor().run(f);
                            var l = f.toCSS({
                                    compress: Boolean(s.compress),
                                    dumpLineNumbers: t.dumpLineNumbers,
                                    strictUnits: Boolean(s.strictUnits)
                                });
                        } catch (c) {
                            throw new L(c, t);
                        }
                        return s.yuicompress && r.mode === 'node' ? n('ycssmin').cssmin(l, s.maxLineLen) : s.compress ? l.replace(/(\s)+/g, '$1') : l;
                    };
                }(f.eval);
                if (o < s.length - 1) {
                    o = l, y = s.split('\n'), g = (s.slice(0, o).match(/\n/g) || '').length + 1;
                    for (var T = o, N = -1; T >= 0 && s.charAt(T) !== '\n'; T--)
                        N++;
                    S = {
                        type: 'Parse',
                        message: 'Unrecognised input',
                        index: o,
                        filename: t.currentFileInfo.filename,
                        line: g,
                        column: N,
                        extract: [
                            y[g - 2],
                            y[g - 1],
                            y[g]
                        ]
                    };
                }
                var C = function (e) {
                    e = S || e || p.imports.error, e ? (e instanceof L || (e = new L(e, t)), a(e)) : a(null, f);
                };
                t.processImports !== !1 ? new i.importVisitor(this.imports, C).run(f) : C();
            },
            parsers: {
                primary: function () {
                    var e, t = [];
                    while ((e = w(this.extendRule) || w(this.mixin.definition) || w(this.rule) || w(this.ruleset) || w(this.mixin.call) || w(this.comment) || w(this.directive)) || w(/^[\s\n]+/) || w(/^;+/))
                        e && t.push(e);
                    return t;
                },
                comment: function () {
                    var e;
                    if (s.charAt(o) !== '/')
                        return;
                    if (s.charAt(o + 1) === '/')
                        return new i.Comment(w(/^\/\/.*/), !0);
                    if (e = w(/^\/\*(?:[^*]|\*+[^\/*])*\*+\/\n?/))
                        return new i.Comment(e);
                },
                entities: {
                    quoted: function () {
                        var e, n = o, r, u = o;
                        s.charAt(n) === '~' && (n++, r = !0);
                        if (s.charAt(n) !== '"' && s.charAt(n) !== '\'')
                            return;
                        r && w('~');
                        if (e = w(/^"((?:[^"\\\r\n]|\\.)*)"|'((?:[^'\\\r\n]|\\.)*)'/))
                            return new i.Quoted(e[0], e[1] || e[2], r, u, t.currentFileInfo);
                    },
                    keyword: function () {
                        var e;
                        if (e = w(/^[_A-Za-z-][_A-Za-z0-9-]*/))
                            return i.colors.hasOwnProperty(e) ? new i.Color(i.colors[e].slice(1)) : new i.Keyword(e);
                    },
                    call: function () {
                        var e, n, r, s, a = o;
                        if (!(e = /^([\w-]+|%|progid:[\w\.]+)\(/.exec(c[u])))
                            return;
                        e = e[1], n = e.toLowerCase();
                        if (n === 'url')
                            return null;
                        o += e.length;
                        if (n === 'alpha') {
                            s = w(this.alpha);
                            if (typeof s != 'undefined')
                                return s;
                        }
                        w('('), r = w(this.entities.arguments);
                        if (!w(')'))
                            return;
                        if (e)
                            return new i.Call(e, r, a, t.currentFileInfo);
                    },
                    arguments: function () {
                        var e = [], t;
                        while (t = w(this.entities.assignment) || w(this.expression)) {
                            e.push(t);
                            if (!w(','))
                                break;
                        }
                        return e;
                    },
                    literal: function () {
                        return w(this.entities.dimension) || w(this.entities.color) || w(this.entities.quoted) || w(this.entities.unicodeDescriptor);
                    },
                    assignment: function () {
                        var e, t;
                        if ((e = w(/^\w+(?=\s?=)/i)) && w('=') && (t = w(this.entity)))
                            return new i.Assignment(e, t);
                    },
                    url: function () {
                        var e;
                        if (s.charAt(o) !== 'u' || !w(/^url\(/))
                            return;
                        return e = w(this.entities.quoted) || w(this.entities.variable) || w(/^(?:(?:\\[\(\)'"])|[^\(\)'"])+/) || '', S(')'), new i.URL(e.value != null || e instanceof i.Variable ? e : new i.Anonymous(e), t.currentFileInfo);
                    },
                    variable: function () {
                        var e, n = o;
                        if (s.charAt(o) === '@' && (e = w(/^@@?[\w-]+/)))
                            return new i.Variable(e, n, t.currentFileInfo);
                    },
                    variableCurly: function () {
                        var e, n, r = o;
                        if (s.charAt(o) === '@' && (n = w(/^@\{([\w-]+)\}/)))
                            return new i.Variable('@' + n[1], r, t.currentFileInfo);
                    },
                    color: function () {
                        var e;
                        if (s.charAt(o) === '#' && (e = w(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/)))
                            return new i.Color(e[1]);
                    },
                    dimension: function () {
                        var e, t = s.charCodeAt(o);
                        if (t > 57 || t < 43 || t === 47 || t == 44)
                            return;
                        if (e = w(/^([+-]?\d*\.?\d+)(%|[a-z]+)?/))
                            return new i.Dimension(e[1], e[2]);
                    },
                    unicodeDescriptor: function () {
                        var e;
                        if (e = w(/^U\+[0-9a-fA-F?]+(\-[0-9a-fA-F?]+)?/))
                            return new i.UnicodeDescriptor(e[0]);
                    },
                    javascript: function () {
                        var e, t = o, n;
                        s.charAt(t) === '~' && (t++, n = !0);
                        if (s.charAt(t) !== '`')
                            return;
                        n && w('~');
                        if (e = w(/^`([^`]*)`/))
                            return new i.JavaScript(e[1], o, n);
                    }
                },
                variable: function () {
                    var e;
                    if (s.charAt(o) === '@' && (e = w(/^(@[\w-]+)\s*:/)))
                        return e[1];
                },
                extend: function (e) {
                    var t, n, r = o, s, u = [];
                    if (!w(e ? /^&:extend\(/ : /^:extend\(/))
                        return;
                    do {
                        s = null, t = [];
                        for (;;) {
                            s = w(/^(all)(?=\s*(\)|,))/);
                            if (s)
                                break;
                            n = w(this.element);
                            if (!n)
                                break;
                            t.push(n);
                        }
                        s = s && s[1], u.push(new i.Extend(new i.Selector(t), s, r));
                    } while (w(','));
                    return S(/^\)/), e && S(/^;/), u;
                },
                extendRule: function () {
                    return this.extend(!0);
                },
                mixin: {
                    call: function () {
                        var e = [], n, r, u, a, f, l = o, c = s.charAt(o), h = !1;
                        if (c !== '.' && c !== '#')
                            return;
                        m();
                        while (n = w(/^[#.](?:[\w-]|\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/))
                            e.push(new i.Element(r, n, o)), r = w('>');
                        w('(') && (u = this.mixin.args.call(this, !0).args, S(')')), u = u || [], w(this.important) && (h = !0);
                        if (e.length > 0 && (w(';') || T('}')))
                            return new i.mixin.Call(e, u, l, t.currentFileInfo, h);
                        g();
                    },
                    args: function (e) {
                        var t = [], n = [], r, u = [], a, f, l, c, h, p = {
                                args: null,
                                variadic: !1
                            };
                        for (;;) {
                            if (e)
                                h = w(this.expression);
                            else {
                                w(this.comment);
                                if (s.charAt(o) === '.' && w(/^\.{3}/)) {
                                    p.variadic = !0, w(';') && !r && (r = !0), (r ? n : u).push({ variadic: !0 });
                                    break;
                                }
                                h = w(this.entities.variable) || w(this.entities.literal) || w(this.entities.keyword);
                            }
                            if (!h)
                                break;
                            l = null, h.throwAwayComments && h.throwAwayComments(), c = h;
                            var d = null;
                            if (e) {
                                if (h.value.length == 1)
                                    var d = h.value[0];
                            } else
                                d = h;
                            if (d && d instanceof i.Variable)
                                if (w(':'))
                                    t.length > 0 && (r && x('Cannot mix ; and , as delimiter types'), a = !0), c = S(this.expression), l = f = d.name;
                                else {
                                    if (!e && w(/^\.{3}/)) {
                                        p.variadic = !0, w(';') && !r && (r = !0), (r ? n : u).push({
                                            name: h.name,
                                            variadic: !0
                                        });
                                        break;
                                    }
                                    e || (f = l = d.name, c = null);
                                }
                            c && t.push(c), u.push({
                                name: l,
                                value: c
                            });
                            if (w(','))
                                continue;
                            if (w(';') || r)
                                a && x('Cannot mix ; and , as delimiter types'), r = !0, t.length > 1 && (c = new i.Value(t)), n.push({
                                    name: f,
                                    value: c
                                }), f = null, t = [], a = !1;
                        }
                        return p.args = r ? n : u, p;
                    },
                    definition: function () {
                        var e, t = [], n, r, u, a, f, c = !1;
                        if (s.charAt(o) !== '.' && s.charAt(o) !== '#' || T(/^[^{]*\}/))
                            return;
                        m();
                        if (n = w(/^([#.](?:[\w-]|\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\s*\(/)) {
                            e = n[1];
                            var h = this.mixin.args.call(this, !1);
                            t = h.args, c = h.variadic, w(')') || (l = o, g()), w(this.comment), w(/^when/) && (f = S(this.conditions, 'expected condition')), r = w(this.block);
                            if (r)
                                return new i.mixin.Definition(e, t, r, f, c);
                            g();
                        }
                    }
                },
                entity: function () {
                    return w(this.entities.literal) || w(this.entities.variable) || w(this.entities.url) || w(this.entities.call) || w(this.entities.keyword) || w(this.entities.javascript) || w(this.comment);
                },
                end: function () {
                    return w(';') || T('}');
                },
                alpha: function () {
                    var e;
                    if (!w(/^\(opacity=/i))
                        return;
                    if (e = w(/^\d+/) || w(this.entities.variable))
                        return S(')'), new i.Alpha(e);
                },
                element: function () {
                    var e, t, n, r;
                    n = w(this.combinator), e = w(/^(?:\d+\.\d+|\d+)%/) || w(/^(?:[.#]?|:*)(?:[\w-]|[^\x00-\x9f]|\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) || w('*') || w('&') || w(this.attribute) || w(/^\([^()@]+\)/) || w(/^[\.#](?=@)/) || w(this.entities.variableCurly), e || w('(') && (r = w(this.selector)) && w(')') && (e = new i.Paren(r));
                    if (e)
                        return new i.Element(n, e, o);
                },
                combinator: function () {
                    var e = s.charAt(o);
                    if (e === '>' || e === '+' || e === '~' || e === '|') {
                        o++;
                        while (s.charAt(o).match(/\s/))
                            o++;
                        return new i.Combinator(e);
                    }
                    return s.charAt(o - 1).match(/\s/) ? new i.Combinator(' ') : new i.Combinator(null);
                },
                selector: function () {
                    var e, t, n = [], r, u, a = [];
                    while ((u = w(this.extend)) || (t = w(this.element))) {
                        u ? a.push.apply(a, u) : (a.length && x('Extend can only be used at the end of selector'), r = s.charAt(o), n.push(t), t = null);
                        if (r === '{' || r === '}' || r === ';' || r === ',' || r === ')')
                            break;
                    }
                    if (n.length > 0)
                        return new i.Selector(n, a);
                    a.length && x('Extend must be used to extend a selector, it cannot be used on its own');
                },
                attribute: function () {
                    var e = '', t, n, r;
                    if (!w('['))
                        return;
                    (t = w(this.entities.variableCurly)) || (t = S(/^(?:[_A-Za-z0-9-\*]*\|)?(?:[_A-Za-z0-9-]|\\.)+/));
                    if (r = w(/^[|~*$^]?=/))
                        n = w(this.entities.quoted) || w(/^[\w-]+/) || w(this.entities.variableCurly);
                    return S(']'), new i.Attribute(t, r, n);
                },
                block: function () {
                    var e;
                    if (w('{') && (e = w(this.primary)) && w('}'))
                        return e;
                },
                ruleset: function () {
                    var e = [], n, r, u;
                    m(), t.dumpLineNumbers && (u = k(o, s, t));
                    while (n = w(this.selector)) {
                        e.push(n), w(this.comment);
                        if (!w(','))
                            break;
                        w(this.comment);
                    }
                    if (e.length > 0 && (r = w(this.block))) {
                        var a = new i.Ruleset(e, r, t.strictImports);
                        return t.dumpLineNumbers && (a.debugInfo = u), a;
                    }
                    l = o, g();
                },
                rule: function (e) {
                    var n, r, u = s.charAt(o), a;
                    m();
                    if (u === '.' || u === '#' || u === '&')
                        return;
                    if (n = w(this.variable) || w(this.property)) {
                        r = !e && (t.compress || n.charAt(0) === '@') ? w(this.value) || w(this.anonymousValue) : w(this.anonymousValue) || w(this.value), a = w(this.important);
                        if (r && w(this.end))
                            return new i.Rule(n, r, a, f, t.currentFileInfo);
                        l = o, g();
                        if (r && !e)
                            return this.rule(!0);
                    }
                },
                anonymousValue: function () {
                    var e;
                    if (e = /^([^@+\/'"*`(;{}-]*);/.exec(c[u]))
                        return o += e[0].length - 1, new i.Anonymous(e[1]);
                },
                'import': function () {
                    var e, n, r = o;
                    m();
                    var s = w(/^@import?\s+/), u = (s ? w(this.importOptions) : null) || {};
                    if (s && (e = w(this.entities.quoted) || w(this.entities.url))) {
                        n = w(this.mediaFeatures);
                        if (w(';'))
                            return n = n && new i.Value(n), new i.Import(e, n, u, r, t.currentFileInfo);
                    }
                    g();
                },
                importOptions: function () {
                    var e, t = {}, n, r;
                    if (!w('('))
                        return null;
                    do
                        if (e = w(this.importOption)) {
                            n = e, r = !0;
                            switch (n) {
                            case 'css':
                                n = 'less', r = !1;
                                break;
                            case 'once':
                                n = 'multiple', r = !1;
                            }
                            t[n] = r;
                            if (!w(','))
                                break;
                        }
                    while (e);
                    return S(')'), t;
                },
                importOption: function () {
                    var e = w(/^(less|css|multiple|once)/);
                    if (e)
                        return e[1];
                },
                mediaFeature: function () {
                    var e, n, r = [];
                    do
                        if (e = w(this.entities.keyword))
                            r.push(e);
                        else if (w('(')) {
                            n = w(this.property), e = w(this.value);
                            if (!w(')'))
                                return null;
                            if (n && e)
                                r.push(new i.Paren(new i.Rule(n, e, null, o, t.currentFileInfo, !0)));
                            else {
                                if (!e)
                                    return null;
                                r.push(new i.Paren(e));
                            }
                        }
                    while (e);
                    if (r.length > 0)
                        return new i.Expression(r);
                },
                mediaFeatures: function () {
                    var e, t = [];
                    do
                        if (e = w(this.mediaFeature)) {
                            t.push(e);
                            if (!w(','))
                                break;
                        } else if (e = w(this.entities.variable)) {
                            t.push(e);
                            if (!w(','))
                                break;
                        }
                    while (e);
                    return t.length > 0 ? t : null;
                },
                media: function () {
                    var e, n, r, u;
                    t.dumpLineNumbers && (u = k(o, s, t));
                    if (w(/^@media/)) {
                        e = w(this.mediaFeatures);
                        if (n = w(this.block))
                            return r = new i.Media(n, e), t.dumpLineNumbers && (r.debugInfo = u), r;
                    }
                },
                directive: function () {
                    var e, n, r, u, a, f, l, c, h, p;
                    if (s.charAt(o) !== '@')
                        return;
                    if (n = w(this['import']) || w(this.media))
                        return n;
                    m(), e = w(/^@[a-z-]+/);
                    if (!e)
                        return;
                    l = e, e.charAt(1) == '-' && e.indexOf('-', 2) > 0 && (l = '@' + e.slice(e.indexOf('-', 2) + 1));
                    switch (l) {
                    case '@font-face':
                        c = !0;
                        break;
                    case '@viewport':
                    case '@top-left':
                    case '@top-left-corner':
                    case '@top-center':
                    case '@top-right':
                    case '@top-right-corner':
                    case '@bottom-left':
                    case '@bottom-left-corner':
                    case '@bottom-center':
                    case '@bottom-right':
                    case '@bottom-right-corner':
                    case '@left-top':
                    case '@left-middle':
                    case '@left-bottom':
                    case '@right-top':
                    case '@right-middle':
                    case '@right-bottom':
                        c = !0;
                        break;
                    case '@page':
                    case '@document':
                    case '@supports':
                    case '@keyframes':
                        c = !0, h = !0;
                        break;
                    case '@namespace':
                        p = !0;
                    }
                    h && (e += ' ' + (w(/^[^{]+/) || '').trim());
                    if (c) {
                        if (r = w(this.block))
                            return new i.Directive(e, r);
                    } else if ((n = p ? w(this.expression) : w(this.entity)) && w(';')) {
                        var d = new i.Directive(e, n);
                        return t.dumpLineNumbers && (d.debugInfo = k(o, s, t)), d;
                    }
                    g();
                },
                value: function () {
                    var e, t = [], n;
                    while (e = w(this.expression)) {
                        t.push(e);
                        if (!w(','))
                            break;
                    }
                    if (t.length > 0)
                        return new i.Value(t);
                },
                important: function () {
                    if (s.charAt(o) === '!')
                        return w(/^! *important/);
                },
                sub: function () {
                    var e, t;
                    if (w('('))
                        if (e = w(this.addition))
                            return t = new i.Expression([e]), S(')'), t.parens = !0, t;
                },
                multiplication: function () {
                    var e, t, n, r, u, a = [];
                    if (e = w(this.operand)) {
                        u = b(s.charAt(o - 1));
                        while (!T(/^\/[*\/]/) && (n = w('/') || w('*'))) {
                            if (!(t = w(this.operand)))
                                break;
                            e.parensInOp = !0, t.parensInOp = !0, r = new i.Operation(n, [
                                r || e,
                                t
                            ], u), u = b(s.charAt(o - 1));
                        }
                        return r || e;
                    }
                },
                addition: function () {
                    var e, t, n, r, u;
                    if (e = w(this.multiplication)) {
                        u = b(s.charAt(o - 1));
                        while ((n = w(/^[-+]\s+/) || !u && (w('+') || w('-'))) && (t = w(this.multiplication)))
                            e.parensInOp = !0, t.parensInOp = !0, r = new i.Operation(n, [
                                r || e,
                                t
                            ], u), u = b(s.charAt(o - 1));
                        return r || e;
                    }
                },
                conditions: function () {
                    var e, t, n = o, r;
                    if (e = w(this.condition)) {
                        while (w(',') && (t = w(this.condition)))
                            r = new i.Condition('or', r || e, t, n);
                        return r || e;
                    }
                },
                condition: function () {
                    var e, t, n, r, s = o, u = !1;
                    w(/^not/) && (u = !0), S('(');
                    if (e = w(this.addition) || w(this.entities.keyword) || w(this.entities.quoted))
                        return (r = w(/^(?:>=|=<|[<=>])/)) ? (t = w(this.addition) || w(this.entities.keyword) || w(this.entities.quoted)) ? n = new i.Condition(r, e, t, s, u) : x('expected expression') : n = new i.Condition('=', e, new i.Keyword('true'), s, u), S(')'), w(/^and/) ? new i.Condition('and', n, w(this.condition)) : n;
                },
                operand: function () {
                    var e, t = s.charAt(o + 1);
                    s.charAt(o) === '-' && (t === '@' || t === '(') && (e = w('-'));
                    var n = w(this.sub) || w(this.entities.dimension) || w(this.entities.color) || w(this.entities.variable) || w(this.entities.call);
                    return e && (n.parensInOp = !0, n = new i.Negative(n)), n;
                },
                expression: function () {
                    var e, t, n = [], r;
                    while (e = w(this.addition) || w(this.entity))
                        n.push(e), !T(/^\/[\/*]/) && (t = w('/')) && n.push(new i.Anonymous(t));
                    if (n.length > 0)
                        return new i.Expression(n);
                },
                property: function () {
                    var e;
                    if (e = w(/^(\*?-?[_a-z0-9-]+)\s*:/))
                        return e[1];
                }
            }
        };
    };
    if (r.mode === 'browser' || r.mode === 'rhino')
        r.Parser.importer = function (e, t, n, r) {
            !/^([a-z-]+:)?\//.test(e) && t.currentDirectory && (e = t.currentDirectory + e);
            var i = r.toSheet(e);
            i.processImports = !1, i.currentFileInfo = t, w(i, function (e, t, r, i, s, o) {
                n.call(null, e, t, o);
            }, !0);
        };
    (function (r) {
        function u(e) {
            return r.functions.hsla(e.h, e.s, e.l, e.a);
        }
        function a(e, t) {
            return e instanceof r.Dimension && e.unit.is('%') ? parseFloat(e.value * t / 100) : f(e);
        }
        function f(e) {
            if (e instanceof r.Dimension)
                return parseFloat(e.unit.is('%') ? e.value / 100 : e.value);
            if (typeof e == 'number')
                return e;
            throw {
                error: 'RuntimeError',
                message: 'color functions take numbers as parameters'
            };
        }
        function l(e) {
            return Math.min(1, Math.max(0, e));
        }
        r.functions = {
            rgb: function (e, t, n) {
                return this.rgba(e, t, n, 1);
            },
            rgba: function (e, t, n, i) {
                var s = [
                        e,
                        t,
                        n
                    ].map(function (e) {
                        return a(e, 256);
                    });
                return i = f(i), new r.Color(s, i);
            },
            hsl: function (e, t, n) {
                return this.hsla(e, t, n, 1);
            },
            hsla: function (e, t, n, r) {
                function o(e) {
                    return e = e < 0 ? e + 1 : e > 1 ? e - 1 : e, e * 6 < 1 ? s + (i - s) * e * 6 : e * 2 < 1 ? i : e * 3 < 2 ? s + (i - s) * (2 / 3 - e) * 6 : s;
                }
                e = f(e) % 360 / 360, t = l(f(t)), n = l(f(n)), r = l(f(r));
                var i = n <= 0.5 ? n * (t + 1) : n + t - n * t, s = n * 2 - i;
                return this.rgba(o(e + 1 / 3) * 255, o(e) * 255, o(e - 1 / 3) * 255, r);
            },
            hsv: function (e, t, n) {
                return this.hsva(e, t, n, 1);
            },
            hsva: function (e, t, n, r) {
                e = f(e) % 360 / 360 * 360, t = f(t), n = f(n), r = f(r);
                var i, s;
                i = Math.floor(e / 60 % 6), s = e / 60 - i;
                var o = [
                        n,
                        n * (1 - t),
                        n * (1 - s * t),
                        n * (1 - (1 - s) * t)
                    ], u = [
                        [
                            0,
                            3,
                            1
                        ],
                        [
                            2,
                            0,
                            1
                        ],
                        [
                            1,
                            0,
                            3
                        ],
                        [
                            1,
                            2,
                            0
                        ],
                        [
                            3,
                            1,
                            0
                        ],
                        [
                            0,
                            1,
                            2
                        ]
                    ];
                return this.rgba(o[u[i][0]] * 255, o[u[i][1]] * 255, o[u[i][2]] * 255, r);
            },
            hue: function (e) {
                return new r.Dimension(Math.round(e.toHSL().h));
            },
            saturation: function (e) {
                return new r.Dimension(Math.round(e.toHSL().s * 100), '%');
            },
            lightness: function (e) {
                return new r.Dimension(Math.round(e.toHSL().l * 100), '%');
            },
            hsvhue: function (e) {
                return new r.Dimension(Math.round(e.toHSV().h));
            },
            hsvsaturation: function (e) {
                return new r.Dimension(Math.round(e.toHSV().s * 100), '%');
            },
            hsvvalue: function (e) {
                return new r.Dimension(Math.round(e.toHSV().v * 100), '%');
            },
            red: function (e) {
                return new r.Dimension(e.rgb[0]);
            },
            green: function (e) {
                return new r.Dimension(e.rgb[1]);
            },
            blue: function (e) {
                return new r.Dimension(e.rgb[2]);
            },
            alpha: function (e) {
                return new r.Dimension(e.toHSL().a);
            },
            luma: function (e) {
                return new r.Dimension(Math.round(e.luma() * e.alpha * 100), '%');
            },
            saturate: function (e, t) {
                var n = e.toHSL();
                return n.s += t.value / 100, n.s = l(n.s), u(n);
            },
            desaturate: function (e, t) {
                var n = e.toHSL();
                return n.s -= t.value / 100, n.s = l(n.s), u(n);
            },
            lighten: function (e, t) {
                var n = e.toHSL();
                return n.l += t.value / 100, n.l = l(n.l), u(n);
            },
            darken: function (e, t) {
                var n = e.toHSL();
                return n.l -= t.value / 100, n.l = l(n.l), u(n);
            },
            fadein: function (e, t) {
                var n = e.toHSL();
                return n.a += t.value / 100, n.a = l(n.a), u(n);
            },
            fadeout: function (e, t) {
                var n = e.toHSL();
                return n.a -= t.value / 100, n.a = l(n.a), u(n);
            },
            fade: function (e, t) {
                var n = e.toHSL();
                return n.a = t.value / 100, n.a = l(n.a), u(n);
            },
            spin: function (e, t) {
                var n = e.toHSL(), r = (n.h + t.value) % 360;
                return n.h = r < 0 ? 360 + r : r, u(n);
            },
            mix: function (e, t, n) {
                n || (n = new r.Dimension(50));
                var i = n.value / 100, s = i * 2 - 1, o = e.toHSL().a - t.toHSL().a, u = ((s * o == -1 ? s : (s + o) / (1 + s * o)) + 1) / 2, a = 1 - u, f = [
                        e.rgb[0] * u + t.rgb[0] * a,
                        e.rgb[1] * u + t.rgb[1] * a,
                        e.rgb[2] * u + t.rgb[2] * a
                    ], l = e.alpha * i + t.alpha * (1 - i);
                return new r.Color(f, l);
            },
            greyscale: function (e) {
                return this.desaturate(e, new r.Dimension(100));
            },
            contrast: function (e, t, n, r) {
                if (!e.rgb)
                    return null;
                typeof n == 'undefined' && (n = this.rgba(255, 255, 255, 1)), typeof t == 'undefined' && (t = this.rgba(0, 0, 0, 1));
                if (t.luma() > n.luma()) {
                    var i = n;
                    n = t, t = i;
                }
                return typeof r == 'undefined' ? r = 0.43 : r = f(r), e.luma() * e.alpha < r ? n : t;
            },
            e: function (e) {
                return new r.Anonymous(e instanceof r.JavaScript ? e.evaluated : e);
            },
            escape: function (e) {
                return new r.Anonymous(encodeURI(e.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B').replace(/\(/g, '%28').replace(/\)/g, '%29'));
            },
            '%': function (e) {
                var t = Array.prototype.slice.call(arguments, 1), n = e.value;
                for (var i = 0; i < t.length; i++)
                    n = n.replace(/%[sda]/i, function (e) {
                        var n = e.match(/s/i) ? t[i].value : t[i].toCSS();
                        return e.match(/[A-Z]$/) ? encodeURIComponent(n) : n;
                    });
                return n = n.replace(/%%/g, '%'), new r.Quoted('"' + n + '"', n);
            },
            unit: function (e, t) {
                return new r.Dimension(e.value, t ? t.toCSS() : '');
            },
            convert: function (e, t) {
                return e.convertTo(t.value);
            },
            round: function (e, t) {
                var n = typeof t == 'undefined' ? 0 : t.value;
                return this._math(function (e) {
                    return e.toFixed(n);
                }, null, e);
            },
            pi: function () {
                return new r.Dimension(Math.PI);
            },
            mod: function (e, t) {
                return new r.Dimension(e.value % t.value, e.unit);
            },
            pow: function (e, t) {
                if (typeof e == 'number' && typeof t == 'number')
                    e = new r.Dimension(e), t = new r.Dimension(t);
                else if (!(e instanceof r.Dimension) || !(t instanceof r.Dimension))
                    throw {
                        type: 'Argument',
                        message: 'arguments must be numbers'
                    };
                return new r.Dimension(Math.pow(e.value, t.value), e.unit);
            },
            _math: function (e, t, n) {
                if (n instanceof r.Dimension)
                    return new r.Dimension(e(parseFloat(n.value)), t == null ? n.unit : t);
                if (typeof n == 'number')
                    return e(n);
                throw {
                    type: 'Argument',
                    message: 'argument must be a number'
                };
            },
            argb: function (e) {
                return new r.Anonymous(e.toARGB());
            },
            percentage: function (e) {
                return new r.Dimension(e.value * 100, '%');
            },
            color: function (e) {
                if (e instanceof r.Quoted)
                    return new r.Color(e.value.slice(1));
                throw {
                    type: 'Argument',
                    message: 'argument must be a string'
                };
            },
            iscolor: function (e) {
                return this._isa(e, r.Color);
            },
            isnumber: function (e) {
                return this._isa(e, r.Dimension);
            },
            isstring: function (e) {
                return this._isa(e, r.Quoted);
            },
            iskeyword: function (e) {
                return this._isa(e, r.Keyword);
            },
            isurl: function (e) {
                return this._isa(e, r.URL);
            },
            ispixel: function (e) {
                return this.isunit(e, 'px');
            },
            ispercentage: function (e) {
                return this.isunit(e, '%');
            },
            isem: function (e) {
                return this.isunit(e, 'em');
            },
            isunit: function (e, t) {
                return e instanceof r.Dimension && e.unit.is(t.value || t) ? r.True : r.False;
            },
            _isa: function (e, t) {
                return e instanceof t ? r.True : r.False;
            },
            multiply: function (e, t) {
                var n = e.rgb[0] * t.rgb[0] / 255, r = e.rgb[1] * t.rgb[1] / 255, i = e.rgb[2] * t.rgb[2] / 255;
                return this.rgb(n, r, i);
            },
            screen: function (e, t) {
                var n = 255 - (255 - e.rgb[0]) * (255 - t.rgb[0]) / 255, r = 255 - (255 - e.rgb[1]) * (255 - t.rgb[1]) / 255, i = 255 - (255 - e.rgb[2]) * (255 - t.rgb[2]) / 255;
                return this.rgb(n, r, i);
            },
            overlay: function (e, t) {
                var n = e.rgb[0] < 128 ? 2 * e.rgb[0] * t.rgb[0] / 255 : 255 - 2 * (255 - e.rgb[0]) * (255 - t.rgb[0]) / 255, r = e.rgb[1] < 128 ? 2 * e.rgb[1] * t.rgb[1] / 255 : 255 - 2 * (255 - e.rgb[1]) * (255 - t.rgb[1]) / 255, i = e.rgb[2] < 128 ? 2 * e.rgb[2] * t.rgb[2] / 255 : 255 - 2 * (255 - e.rgb[2]) * (255 - t.rgb[2]) / 255;
                return this.rgb(n, r, i);
            },
            softlight: function (e, t) {
                var n = t.rgb[0] * e.rgb[0] / 255, r = n + e.rgb[0] * (255 - (255 - e.rgb[0]) * (255 - t.rgb[0]) / 255 - n) / 255;
                n = t.rgb[1] * e.rgb[1] / 255;
                var i = n + e.rgb[1] * (255 - (255 - e.rgb[1]) * (255 - t.rgb[1]) / 255 - n) / 255;
                n = t.rgb[2] * e.rgb[2] / 255;
                var s = n + e.rgb[2] * (255 - (255 - e.rgb[2]) * (255 - t.rgb[2]) / 255 - n) / 255;
                return this.rgb(r, i, s);
            },
            hardlight: function (e, t) {
                var n = t.rgb[0] < 128 ? 2 * t.rgb[0] * e.rgb[0] / 255 : 255 - 2 * (255 - t.rgb[0]) * (255 - e.rgb[0]) / 255, r = t.rgb[1] < 128 ? 2 * t.rgb[1] * e.rgb[1] / 255 : 255 - 2 * (255 - t.rgb[1]) * (255 - e.rgb[1]) / 255, i = t.rgb[2] < 128 ? 2 * t.rgb[2] * e.rgb[2] / 255 : 255 - 2 * (255 - t.rgb[2]) * (255 - e.rgb[2]) / 255;
                return this.rgb(n, r, i);
            },
            difference: function (e, t) {
                var n = Math.abs(e.rgb[0] - t.rgb[0]), r = Math.abs(e.rgb[1] - t.rgb[1]), i = Math.abs(e.rgb[2] - t.rgb[2]);
                return this.rgb(n, r, i);
            },
            exclusion: function (e, t) {
                var n = e.rgb[0] + t.rgb[0] * (255 - e.rgb[0] - e.rgb[0]) / 255, r = e.rgb[1] + t.rgb[1] * (255 - e.rgb[1] - e.rgb[1]) / 255, i = e.rgb[2] + t.rgb[2] * (255 - e.rgb[2] - e.rgb[2]) / 255;
                return this.rgb(n, r, i);
            },
            average: function (e, t) {
                var n = (e.rgb[0] + t.rgb[0]) / 2, r = (e.rgb[1] + t.rgb[1]) / 2, i = (e.rgb[2] + t.rgb[2]) / 2;
                return this.rgb(n, r, i);
            },
            negation: function (e, t) {
                var n = 255 - Math.abs(255 - t.rgb[0] - e.rgb[0]), r = 255 - Math.abs(255 - t.rgb[1] - e.rgb[1]), i = 255 - Math.abs(255 - t.rgb[2] - e.rgb[2]);
                return this.rgb(n, r, i);
            },
            tint: function (e, t) {
                return this.mix(this.rgb(255, 255, 255), e, t);
            },
            shade: function (e, t) {
                return this.mix(this.rgb(0, 0, 0), e, t);
            },
            extract: function (e, t) {
                return t = t.value - 1, e.value[t];
            },
            'data-uri': function (t, i) {
                if (typeof e != 'undefined')
                    return new r.URL(i || t, this.currentFileInfo).eval(this.env);
                var s = t.value, o = i && i.value, u = n('fs'), a = n('path'), f = !1;
                arguments.length < 2 && (o = s), this.env.isPathRelative(o) && (this.currentFileInfo.relativeUrls ? o = a.join(this.currentFileInfo.currentDirectory, o) : o = a.join(this.currentFileInfo.entryPath, o));
                if (arguments.length < 2) {
                    var l;
                    try {
                        l = n('mime');
                    } catch (c) {
                        l = r._mime;
                    }
                    s = l.lookup(o);
                    var h = l.charsets.lookup(s);
                    f = [
                        'US-ASCII',
                        'UTF-8'
                    ].indexOf(h) < 0, f && (s += ';base64');
                } else
                    f = /;base64$/.test(s);
                var p = u.readFileSync(o), d = 32, v = parseInt(p.length / 1024, 10);
                if (v >= d) {
                    if (this.env.ieCompat !== !1)
                        return this.env.silent || console.warn('Skipped data-uri embedding of %s because its size (%dKB) exceeds IE8-safe %dKB!', o, v, d), new r.URL(i || t, this.currentFileInfo).eval(this.env);
                    this.env.silent || console.warn('WARNING: Embedding %s (%dKB) exceeds IE8\'s data-uri size limit of %dKB!', o, v, d);
                }
                p = f ? p.toString('base64') : encodeURIComponent(p);
                var m = '\'data:' + s + ',' + p + '\'';
                return new r.URL(new r.Anonymous(m));
      